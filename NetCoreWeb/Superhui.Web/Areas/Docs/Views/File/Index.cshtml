@model String
<div>
  <textarea style="display:none" id="mark-content">@Model</textarea>
</div>

@section Catalog{
  @*@foreach (var f in (Newtonsoft.Json.Linq.JArray)ViewBag.Catalogue) {
    <li>
      <a href="#" path=@f["path"] onclick="getDoc(this)">@f["name"].ToString().Replace(".md", "")</a>
    </li>
  }*@
  @await Component.InvokeAsync("Catalog", ViewBag.AllCatalogue)
}

@section CatalogTree{

  <div class="leftNav">
    <div id="samplesToc">
        <div id="tree" style="top: 35px; left: 0px;" class="treeDiv">
          <div id="treeRoot" onselectstart="return false" ondragstart="return false">
            <div class="treeNode">
              <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
              <span onclick="expandCollapse(this.parentNode)" class="category">目录节点一 </span>
              <div class="treeSubnodesHidden">
                  
                  <div class="treeNode">
                       <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
                       <span onclick="expandCollapse(this.parentNode)" class="category">目录节点一子目录 </span>
                       <div class="treeSubnodesHidden">
                           <div class="treeNode">
                              <a href="#" class="treeUnselected" onclick="clickAnchor(this)">二级叶子结点一</a>
                        </div>
                        <div class="treeNode">
                              <a href="#" class="treeUnselected" onclick="clickAnchor(this)">二级叶子结点二</a>
                        </div>
                    </div>
                  </div>
                  
                <div class="treeNode">
                  <a href="#" class="treeUnselected" onclick="clickAnchor(this)">叶子结点一</a>
                </div>
                <div class="treeNode">
                  <a href="#" class="treeUnselected" onclick="clickAnchor(this)">叶子结点二</a>
                </div>
                <div class="treeNode">
                  <a href="#" class="treeUnselected" onclick="clickAnchor(this)">叶子结点三</a>
                </div>
                <div class="treeNode">
                  <a href="#" class="treeUnselected" onclick="clickAnchor(this)">叶子结点四</a>
                </div>
                <div class="treeNode">
                  <a href="#" class="treeUnselected" onclick="clickAnchor(this)">叶子结点五</a>
                </div>
                <div class="treeNode">
                  <a href="#" class="treeUnselected" onclick="clickAnchor(this)">叶子结点六</a>
                </div>
              </div>
            </div>
            <div class="treeNode">
              <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
              <span onclick="expandCollapse(this.parentNode)" class="category">\FF34</span>
              <span onclick="expandCollapse(this.parentNode)" class="category">目录节点二</span>
              <div class="treeSubnodesHidden">
                <div class="treeNode">
                  <a href="#" class="treeUnselected" onclick="clickAnchor(this)">叶子结点一</a>
                </div>
                <div class="treeNode">
                  <a href="#" class="treeUnselected" onclick="clickAnchor(this)">叶子结点二</a>
                </div>
                <div class="treeNode">
                  <a href="#" class="treeUnselected" onclick="clickAnchor(this)">叶子结点三</a>
                </div>
                <div class="treeNode">
                  <a href="#" class="treeUnselected" onclick="clickAnchor(this)">叶子结点四</a>
                </div>
                <div class="treeNode">
                  <a href="#" class="treeUnselected" onclick="clickAnchor(this)">叶子结点五</a>
                </div>
              </div>
            </div>
          </div>
        </div>
    </div>
  </div>
}

@section Links{
  <link rel="stylesheet" href="~/css/mark.css" />
  <style type="text/css">
      /*主页面样式*/
      .leftNav {
        // width: 180px;
        // height:500px;
        // border:#B9E0F7 1px solid;
        // margin-left: 1%;
        // margin-right: 1%;
    }
    .treeDiv {
      color: #636363;
      font-weight: normal;
      background-color: #fff;
      color: black;
      overflow: auto;
      overflow-x: hidden;
    }
    .treeNode {
      white-space: nowrap;
      text-indent: -14px;
      margin-left: 14px;
    }
    a.treeUnselected:hover, a.treeSelected:hover {
      background-color: #BFD9ED;
      text-decoration: none;
    }
    a.treeUnselected, a.treeSelected {
      text-decoration: none;
    }
    a.treeSelected {
      background-color: #B9E0F7;
    }
    a.treeUnselected {
      background-color: transparent;
    }
    .treeSubnodes {
      display: block;
    }
    .treeSubnodesHidden {
      display: none;
    }
    .treeNode img.treeNoLinkImage, .treeNode img.treeLinkImage {
      height: 15px;
      margin-left: 5px;
      margin-right: 0px;
      width: 15px;
    }
    .treeNode img.treeLinkImage {
      cursor: pointer;
    }
    div.treeNode a {
      margin-left: 16px;
      text-indent: 0;
    }
    div.treeNode span.category {
      cursor: pointer;
    }
    span.category {
      color: #007bff
    }
    .ellipsis {
      overflow: hidden;
      text-overflow: ellipsis; 
      white-space: nowrap;
    }
  </style>
}

@section Scripts{

  <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
  <!-- <script src="~/js/area-select.js" asp-append-version="true"></script>
  <script src="~/common/js/jquery.ydui.flexible.min.js" asp-append-version="true"></script>
  <script src="~/common/js/jquery.ydui.min.js" asp-append-version="true"></script>
  <script src="~/common/js/jquery.fullpage.min.js" asp-append-version="true"></script>
  <script src="~/common/js/common.js" asp-append-version="true"></script> -->
  <script type="text/javascript">
    var treeSelected = null;//选中的树节点
    var imgPlus = new Image();
    imgPlus.src="../graphics/treenodeplus.gif";
    var imgMinus = new Image();
    imgMinus.src="../graphics/treenodeminus.gif";
    //父节点展开事件
    function expandCollapse(el)
    {
        //如果父节点有字节点（class 属性为treeSubnodesHidden），展开所有子节点
        if (el.className!= "treeNode"){
            return;    //判断父节点是否为一个树节点，如果树节点不能展开，请检查是否节点的class属性是否为treeNode
        }    
        var child;
        var imgEl;//图片子节点，在树展开时更换图片
        for(var i=0; i < el.childNodes.length; i++)
        {
            child = el.childNodes[i];
            if (child.src)
            {
                imgEl = child;
            }
            else if (child.className == "treeSubnodesHidden")
            {
                child.className = "treeSubnodes";//原来若隐藏，则展开
                imgEl.src = imgMinus.src;//更换图片
                break;
            }
            else if (child.className == "treeSubnodes")
            {
                child.className = "treeSubnodesHidden";//原来若展开，则隐藏
                imgEl.src = imgPlus.src;//更换图片
                break;
            }
        }
    }

    //子节点点击事件，设置选中节点的样式
    function clickAnchor(el) {
        selectNode(el.parentNode);
        el.blur();
    }

    function selectNode(el) {
      if (treeSelected != null) {
        setSubNodeClass(treeSelected, 'A', 'treeUnselected');
      }
      setSubNodeClass(el, 'A', 'treeSelected');
      treeSelected = el;
    }

    function setSubNodeClass(el, nodeName, className) {
      var child;
      for (var i=0; i < el.childNodes.length; i++)
      {
          child = el.childNodes[i];
          if (child.nodeName == nodeName)
          {
              child.className = className;
              break;
          }
      }
    }
  </script>
  <script>
    $(document).ready(function(){
      document.getElementById('blog-content').innerHTML =
      marked($("#mark-content").val());
    });

    @*<!-- xhr -->
    var xhr = new XMLHttpRequest();
    xhr.open('GET', "/api/file/fileInfo/note/racs");
    xhr.responseType = 'json';
    xhr.onload = function() {
      console.log(xhr.response);
    };
    xhr.onerror = function() {
      console.log("Oops, error");
    };
    xhr.send(); *@

    @*<!-- fetch -->
    fetch("/api/file/fileInfo/note/racs").then(function(response) {
      return response.json();
    }).then(function(data) {
      console.log(data);
      for(const blink of data.children) {
        console.log(blink)
        $("#catalog").append(`<li><a href="/docs${blink.path}">${blink.name}</a></li>`);
      }
    }).catch(function(e) {
      console.log("Oops, error");
    });*@

    function getDoc (e) {
      const path = $(e).attr('path')
      const newUrl = `${window.location.protocol}\/\/${document.domain}/docs${path}`;
      window.history.replaceState({}, '', newUrl);

      fetch("/api/file/content" + path).then(function(response) {
        return response.text();
      }).then(function(data) {
        document.getElementById('blog-content').innerHTML = marked(data);
      }).catch(function(e) {
        console.log("fetch blog content error!");
      });
    }
  </script>
}

